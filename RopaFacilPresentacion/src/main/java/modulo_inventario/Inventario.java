package modulo_inventario;

import control.ControlFlujo;
import control.ControlOperaciones;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import javax.swing.JComponent;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC WHITE WOLF
 */
public class Inventario extends javax.swing.JPanel {
    
    private static Inventario instance;
    
    private boolean campoValido;
    private boolean filtroValido;
    private final DefaultTableModel modeloTablaProductos;
    private final DefaultTableModel modeloTablaTallas;
    /**
     * Constructor por defecto.
     */
    private Inventario() {
        initComponents();
        btnHabilitarDeshabilitar.setVisible(false);
        btnEditar.setVisible(false);
        jLBuscador.setVisible(false);
        jTFBuscador.setVisible(false);
        jLFiltroCategoriaEstado.setVisible(false);
        jCBCategoriaEstado.setVisible(false);
        mostrarTallas(false);
        
        modeloTablaProductos = new DefaultTableModel(new String[]{"Nombre", "Tipo", "Categoría", "Color", "Precio Unitario", "Total", "Fecha y hora", "Proveedor"}, 0);
        modeloTablaProductos.setRowCount(0);
        jTProductos.setModel(modeloTablaProductos);
        modeloTablaTallas = new DefaultTableModel(new String[]{"Talla", "Cantidad"}, 0);
        modeloTablaTallas.setRowCount(0);
        jTallas.setModel(modeloTablaTallas);
    }
    
    public static Inventario getInstance(){
        if(instance == null)
            instance = new Inventario();
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLTítuloNuevoProducto = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        jTFBuscador = new javax.swing.JTextField();
        jLBuscador = new javax.swing.JLabel();
        jCBFiltro = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTProductos = new javax.swing.JTable();
        jLFiltroBusqueda = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTallas = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnHabilitarDeshabilitar = new javax.swing.JButton();
        jCBCategoriaEstado = new javax.swing.JComboBox<>();
        jLFiltroCategoriaEstado = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 0, 0));
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLTítuloNuevoProducto.setText("Inventario");
        jLTítuloNuevoProducto.setBackground(new java.awt.Color(255, 255, 255));
        jLTítuloNuevoProducto.setFont(new java.awt.Font("Century Gothic", 1, 72)); // NOI18N
        jLTítuloNuevoProducto.setForeground(new java.awt.Color(0, 0, 0));
        add(jLTítuloNuevoProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, -1, -1));

        btnRegresar.setText("Regresar");
        btnRegresar.setBackground(new java.awt.Color(0, 0, 0));
        btnRegresar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 0, true));
        btnRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegresar.setFocusPainted(false);
        btnRegresar.setFocusable(false);
        btnRegresar.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 610, 145, 48));
        btnRegresar.setBorderPainted(false);
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.setOpaque(false);
        btnRegresar.setUI(new javax.swing.plaf.basic.BasicButtonUI() {
            @Override
            public void paint(Graphics g, JComponent c) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                // Pinta un fondo redondeado
                g2.setColor(c.getBackground());
                g2.fillRoundRect(0, 0, c.getWidth(), c.getHeight(), 20, 20);
                super.paint(g2, c);
                g2.dispose();
            }
        });

        jTFBuscador.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jTFBuscador.setBackground(new java.awt.Color(255, 255, 255));
        jTFBuscador.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jTFBuscador.setForeground(new java.awt.Color(0, 0, 0));
        jTFBuscador.setMaximumSize(new java.awt.Dimension(64, 21));
        add(jTFBuscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 150, 601, 33));

        jLBuscador.setText("Nombre del producto:");
        jLBuscador.setBackground(new java.awt.Color(255, 255, 255));
        jLBuscador.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLBuscador.setForeground(new java.awt.Color(0, 0, 0));
        add(jLBuscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 110, 268, 28));

        jCBFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A", "Nombre", "Estado", "Color", "Tipo", "Categoría", "Talla", "N° de caja" }));
        jCBFiltro.setBackground(new java.awt.Color(255, 255, 255));
        jCBFiltro.setBorder(null);
        jCBFiltro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCBFiltro.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jCBFiltro.setForeground(new java.awt.Color(0, 0, 0));
        jCBFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBFiltroItemStateChanged(evt);
            }
        });
        add(jCBFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 117, -1));

        jTProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Estado", "Tipo", "Categoría", "Color", "N° Caja", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTProductos.setBackground(new java.awt.Color(255, 255, 255));
        jTProductos.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jTProductos.setForeground(new java.awt.Color(0, 0, 0));
        jTProductos.setMaximumSize(new java.awt.Dimension(375, 0));
        jTProductos.setMinimumSize(new java.awt.Dimension(375, 0));
        jTProductos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTProductos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTProductos.getTableHeader().setResizingAllowed(false);
        jTProductos.getTableHeader().setReorderingAllowed(false);
        jTProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTProductos);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 203, 940, 358));

        jLFiltroBusqueda.setText("Filtro de búsqueda:");
        jLFiltroBusqueda.setBackground(new java.awt.Color(255, 255, 255));
        jLFiltroBusqueda.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLFiltroBusqueda.setForeground(new java.awt.Color(0, 0, 0));
        add(jLFiltroBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, 28));

        jTallas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Talla", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTallas.setBackground(new java.awt.Color(255, 255, 255));
        jTallas.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jTallas.setForeground(new java.awt.Color(0, 0, 0));
        jTallas.setMaximumSize(new java.awt.Dimension(375, 0));
        jTallas.setMinimumSize(new java.awt.Dimension(375, 0));
        jTallas.setPreferredSize(new java.awt.Dimension(375, 0));
        jTallas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTallas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTallas.getTableHeader().setResizingAllowed(false);
        jTallas.getTableHeader().setReorderingAllowed(false);
        jTallas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTallasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTallas);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(987, 203, 260, 133));

        btnEditar.setBackground(new java.awt.Color(0, 0, 0));
        btnEditar.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(255, 255, 255));
        btnEditar.setText("Editar");
        btnEditar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 0, true));
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.setFocusPainted(false);
        btnEditar.setFocusable(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 610, 120, 48));
        btnEditar.setBorderPainted(false);
        btnEditar.setContentAreaFilled(false);
        btnEditar.setOpaque(false);
        btnEditar.setUI(new javax.swing.plaf.basic.BasicButtonUI() {
            @Override
            public void paint(Graphics g, JComponent c) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                // Pinta un fondo redondeado
                g2.setColor(c.getBackground());
                g2.fillRoundRect(0, 0, c.getWidth(), c.getHeight(), 20, 20);
                super.paint(g2, c);
                g2.dispose();
            }
        });

        btnHabilitarDeshabilitar.setBackground(new java.awt.Color(0, 0, 0));
        btnHabilitarDeshabilitar.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        btnHabilitarDeshabilitar.setForeground(new java.awt.Color(255, 255, 255));
        btnHabilitarDeshabilitar.setText("Habilitar/deshabilitar producto");
        btnHabilitarDeshabilitar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 0, true));
        btnHabilitarDeshabilitar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHabilitarDeshabilitar.setFocusPainted(false);
        btnHabilitarDeshabilitar.setFocusable(false);
        btnHabilitarDeshabilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHabilitarDeshabilitarActionPerformed(evt);
            }
        });
        add(btnHabilitarDeshabilitar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 610, 400, 48));
        btnHabilitarDeshabilitar.setBorderPainted(false);
        btnHabilitarDeshabilitar.setContentAreaFilled(false);
        btnHabilitarDeshabilitar.setOpaque(false);
        btnHabilitarDeshabilitar.setUI(new javax.swing.plaf.basic.BasicButtonUI() {
            @Override
            public void paint(Graphics g, JComponent c) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                // Pinta un fondo redondeado
                g2.setColor(c.getBackground());
                g2.fillRoundRect(0, 0, c.getWidth(), c.getHeight(), 20, 20);
                super.paint(g2, c);
                g2.dispose();
            }
        });

        jCBCategoriaEstado.setBackground(new java.awt.Color(255, 255, 255));
        jCBCategoriaEstado.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jCBCategoriaEstado.setForeground(new java.awt.Color(0, 0, 0));
        jCBCategoriaEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DAMA", "CABALLERO" }));
        jCBCategoriaEstado.setBorder(null);
        jCBCategoriaEstado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCBCategoriaEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBCategoriaEstadoItemStateChanged(evt);
            }
        });
        add(jCBCategoriaEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 160, -1, -1));

        jLFiltroCategoriaEstado.setBackground(new java.awt.Color(255, 255, 255));
        jLFiltroCategoriaEstado.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLFiltroCategoriaEstado.setForeground(new java.awt.Color(0, 0, 0));
        jLFiltroCategoriaEstado.setText("Categoría:");
        add(jLFiltroCategoriaEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, -1, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        jTFBuscador.setText("");
        modeloTablaProductos.setRowCount(0);
        modeloTablaTallas.setRowCount(0);
        mostrarTallas(false);
        ControlFlujo.mostrarMenuPrincipal();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void jCBFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBFiltroItemStateChanged
        if(ControlOperaciones.validarCampoInvalidoComboBox(jCBFiltro)){
            if(jCBFiltro.getSelectedItem().equals("Nombre")){
                filtrarBuscador("Nombre del producto");
                ControlOperaciones.limiteCaracteres(jTFBuscador, 100);
                ControlOperaciones.configurarCamposTexto(jTFBuscador);
                activarBuscador();
                
            } else if(jCBFiltro.getSelectedItem().equals("Proveedor")){
                filtrarBuscador("Proveedor del producto");
                ControlOperaciones.limiteCaracteres(jTFBuscador, 100);
                ControlOperaciones.configurarCamposTexto(jTFBuscador);
                activarBuscador();
                
            } else if(jCBFiltro.getSelectedItem().equals("Tipo")){
                filtrarBuscador("Tipo de producto");
                ControlOperaciones.limiteCaracteres(jTFBuscador, 50);
                ControlOperaciones.configurarCamposTexto(jTFBuscador);
                activarBuscador();
                
            } else if(jCBFiltro.getSelectedItem().equals("Color")){
                filtrarBuscador("Color del producto");
                ControlOperaciones.limiteCaracteres(jTFBuscador, 50);
                ControlOperaciones.configurarCamposTexto(jTFBuscador);
                activarBuscador();
                
            } else if(jCBFiltro.getSelectedItem().equals("Talla")){
                filtrarBuscador("Talla de producto");
                ControlOperaciones.limiteCaracteres(jTFBuscador, 5);
                ControlOperaciones.configurarCamposTexto(jTFBuscador);
                activarBuscador();
                
            } else if(jCBFiltro.getSelectedItem().equals("N° de caja")){
                filtrarBuscador("Número de caja del producto");
                ControlOperaciones.limiteCaracteres(jTFBuscador, 2);
                ControlOperaciones.configurarCamposCantidades(jTFBuscador);
                activarBuscador();
                
            } else if(jCBFiltro.getSelectedItem().equals("Categoría")){
                filtrarComboBox();
                jLFiltroCategoriaEstado.setText("Categoría:");
                jCBCategoriaEstado.removeAllItems();
                jCBCategoriaEstado.addItem("DAMA");
                jCBCategoriaEstado.addItem("CABALLERO");
                
            } else if(jCBFiltro.getSelectedItem().equals("Estado")){
                filtrarComboBox();
                jLFiltroCategoriaEstado.setText("Estado:");
                jCBCategoriaEstado.removeAllItems();
                jCBCategoriaEstado.addItem("ACTIVO");
                jCBCategoriaEstado.addItem("INACTIVO");
            }
            
        } else{
            
            if(jLBuscador.isVisible())
                jLBuscador.setVisible(false);

            if(jTFBuscador.isVisible())
                jTFBuscador.setVisible(false);
            
            modeloTablaProductos.setRowCount(0);
            mostrarTallas(false);
        }
    }//GEN-LAST:event_jCBFiltroItemStateChanged

    private void jTProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTProductosMouseClicked
        
        if(ControlOperaciones.validarCampoInvalidoComboBox(jCBFiltro) && jTProductos.getSelectedRow() != -1){
            mostrarTallas(true);
            
        } else{
            mostrarTallas(false);
        }
            
        
    }//GEN-LAST:event_jTProductosMouseClicked

    private void jTallasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTallasMouseClicked
        
    }//GEN-LAST:event_jTallasMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        ControlFlujo.mostrarEditarProducto();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnHabilitarDeshabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHabilitarDeshabilitarActionPerformed
        
    }//GEN-LAST:event_btnHabilitarDeshabilitarActionPerformed

    private void jCBCategoriaEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBCategoriaEstadoItemStateChanged

    }//GEN-LAST:event_jCBCategoriaEstadoItemStateChanged

    private void activarBuscador(){
        jTFBuscador.getDocument().addDocumentListener( new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {tablaDinamica();}

            @Override
            public void removeUpdate(DocumentEvent e) {tablaDinamica();}

            @Override
            public void changedUpdate(DocumentEvent e) {tablaDinamica();}
        });
    }
    
    private void tablaDinamica(){
        filtroValido = ControlOperaciones.validarCampoInvalidoComboBox(jCBFiltro);
        if(filtroValido && jTProductos.getSelectedRow() != -1){
            if(!btnHabilitarDeshabilitar.isVisible())
                btnHabilitarDeshabilitar.setVisible(true);
            if(!btnEditar.isVisible())
                btnEditar.setVisible(true);
        } else{
            if(btnHabilitarDeshabilitar.isVisible())
                btnHabilitarDeshabilitar.setVisible(false);
            if(btnEditar.isVisible())
                btnEditar.setVisible(false);
        }
        
    }
    
    private void mostrarTallas(boolean mostrar){
        jTallas.setVisible(mostrar);
    }
    
    private void filtrarComboBox(){
        if(jLBuscador.isVisible())
            jLBuscador.setVisible(false);

        if(jTFBuscador.isVisible())
            jTFBuscador.setVisible(false);

        if(!jLFiltroCategoriaEstado.isVisible())
            jLFiltroCategoriaEstado.setVisible(true);

        if(!jCBCategoriaEstado.isVisible())
            jCBCategoriaEstado.setVisible(true);

        modeloTablaProductos.setRowCount(0);
        modeloTablaTallas.setRowCount(0);
        mostrarTallas(false);
    }
    
    private void filtrarBuscador(String nuevoTítulo){
        
        if(jLFiltroCategoriaEstado.isVisible())
            jLFiltroCategoriaEstado.setVisible(false);
        
        if(jCBCategoriaEstado.isVisible())
            jCBCategoriaEstado.setVisible(false);
        
        if(!jLBuscador.isVisible())
            jLBuscador.setVisible(true);
        
        if(!jTFBuscador.isVisible())
            jTFBuscador.setVisible(true);
        
        jLBuscador.setText(nuevoTítulo);
        jTFBuscador.setText("");
        modeloTablaProductos.setRowCount(0);
        modeloTablaTallas.setRowCount(0);
        mostrarTallas(false);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnHabilitarDeshabilitar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> jCBCategoriaEstado;
    private javax.swing.JComboBox<String> jCBFiltro;
    private javax.swing.JLabel jLBuscador;
    private javax.swing.JLabel jLFiltroBusqueda;
    private javax.swing.JLabel jLFiltroCategoriaEstado;
    private javax.swing.JLabel jLTítuloNuevoProducto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTFBuscador;
    private javax.swing.JTable jTProductos;
    private javax.swing.JTable jTallas;
    // End of variables declaration//GEN-END:variables
}