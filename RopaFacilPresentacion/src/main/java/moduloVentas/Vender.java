package moduloVentas;

import control.ControlFlujo;
import control.ControlOperaciones;
import dtos.ProductoDTO;
import dtos.VentaDTO;
import exception.NegocioException;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC WHITE WOLF
 */
public class Vender extends javax.swing.JPanel {
    
    private static Vender instance;
    private final DefaultTableModel modeloTablaProductos;
    private final DefaultTableModel modeloTablaTallas;
    private List<VentaDTO> ventas;
    /**
     * Constructor por defecto.
     */
    private Vender() {
        initComponents();
        jFTotal.setText("0.00");
        jTallas.setVisible(false);
        btnQuitarProducto.setVisible(false);
        btnConfirmarVenta.setVisible(false);
        
        modeloTablaProductos = (DefaultTableModel) jTProductos.getModel();
        modeloTablaProductos.setRowCount(0);
        
        modeloTablaProductos.addTableModelListener(e -> {
            switch (e.getType()) {
                case TableModelEvent.INSERT -> {
                    if(modeloTablaProductos.getRowCount() > 0)
                        btnConfirmarVenta.setVisible(true);
                    else
                        btnConfirmarVenta.setVisible(false);
                }
                case TableModelEvent.DELETE -> {
                    if(modeloTablaProductos.getRowCount() > 0)
                        btnConfirmarVenta.setVisible(true);
                    else
                        btnConfirmarVenta.setVisible(false);
                }
                case TableModelEvent.UPDATE -> {
                    if(modeloTablaProductos.getRowCount() > 0)
                        btnConfirmarVenta.setVisible(true);
                    else
                        btnConfirmarVenta.setVisible(false);
                }
                default -> {btnConfirmarVenta.setVisible(true);}
            }
        });
        
        jTProductos.setModel(modeloTablaProductos);
        
        modeloTablaTallas = (DefaultTableModel) jTallas.getModel();
        modeloTablaTallas.setRowCount(0);
        jTallas.setModel(modeloTablaTallas);
        jTallas.setVisible(true);
    }
    
    public static Vender getInstance(){
        if(instance == null)
            instance = new Vender();
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLTítuloNuevoProducto = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTProductos = new javax.swing.JTable();
        btnConfirmarVenta = new javax.swing.JButton();
        btnQuitarProducto = new javax.swing.JButton();
        btnAgregarTalla = new javax.swing.JButton();
        jLTotal = new javax.swing.JLabel();
        jFTotal = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTallas = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 0, 0));
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLTítuloNuevoProducto.setText("Productos");
        jLTítuloNuevoProducto.setBackground(new java.awt.Color(255, 255, 255));
        jLTítuloNuevoProducto.setFont(new java.awt.Font("Century Gothic", 1, 72)); // NOI18N
        jLTítuloNuevoProducto.setForeground(new java.awt.Color(0, 0, 0));
        add(jLTítuloNuevoProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, -1, -1));

        btnRegresar.setBackground(new java.awt.Color(0, 0, 0));
        btnRegresar.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setText("Regresar");
        btnRegresar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 0, true));
        btnRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegresar.setFocusPainted(false);
        btnRegresar.setFocusable(false);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 590, 145, 48));
        btnRegresar.setBorderPainted(false);
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.setOpaque(false);
        btnRegresar.setUI(new javax.swing.plaf.basic.BasicButtonUI() {
            @Override
            public void paint(Graphics g, JComponent c) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                // Pinta un fondo redondeado
                g2.setColor(c.getBackground());
                g2.fillRoundRect(0, 0, c.getWidth(), c.getHeight(), 20, 20);
                super.paint(g2, c);
                g2.dispose();
            }
        });

        jTProductos.setBackground(new java.awt.Color(255, 255, 255));
        jTProductos.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jTProductos.setForeground(new java.awt.Color(0, 0, 0));
        jTProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Tipo", "Categoría", "Color", "Precio Unitario", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTProductos.setMaximumSize(new java.awt.Dimension(375, 0));
        jTProductos.setMinimumSize(new java.awt.Dimension(375, 0));
        jTProductos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTProductos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTProductos.getTableHeader().setResizingAllowed(false);
        jTProductos.getTableHeader().setReorderingAllowed(false);
        jTProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTProductos);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 840, 358));

        btnConfirmarVenta.setBackground(new java.awt.Color(0, 0, 0));
        btnConfirmarVenta.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        btnConfirmarVenta.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirmarVenta.setText("Confirmar venta");
        btnConfirmarVenta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 0, true));
        btnConfirmarVenta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfirmarVenta.setFocusPainted(false);
        btnConfirmarVenta.setFocusable(false);
        btnConfirmarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarVentaActionPerformed(evt);
            }
        });
        add(btnConfirmarVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 590, 250, 48));
        btnRegresar.setBorderPainted(false);
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.setOpaque(false);
        btnRegresar.setUI(new javax.swing.plaf.basic.BasicButtonUI() {
            @Override
            public void paint(Graphics g, JComponent c) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                // Pinta un fondo redondeado
                g2.setColor(c.getBackground());
                g2.fillRoundRect(0, 0, c.getWidth(), c.getHeight(), 20, 20);
                super.paint(g2, c);
                g2.dispose();
            }
        });

        btnQuitarProducto.setBackground(new java.awt.Color(0, 0, 0));
        btnQuitarProducto.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        btnQuitarProducto.setForeground(new java.awt.Color(255, 255, 255));
        btnQuitarProducto.setText("Quitar producto");
        btnQuitarProducto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 0, true));
        btnQuitarProducto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnQuitarProducto.setFocusPainted(false);
        btnQuitarProducto.setFocusable(false);
        btnQuitarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarProductoActionPerformed(evt);
            }
        });
        add(btnQuitarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 590, 250, 48));
        btnQuitarProducto.setBorderPainted(false);
        btnQuitarProducto.setContentAreaFilled(false);
        btnQuitarProducto.setOpaque(false);
        btnQuitarProducto.setUI(new javax.swing.plaf.basic.BasicButtonUI() {
            @Override
            public void paint(Graphics g, JComponent c) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                // Pinta un fondo redondeado
                g2.setColor(c.getBackground());
                g2.fillRoundRect(0, 0, c.getWidth(), c.getHeight(), 20, 20);
                super.paint(g2, c);
                g2.dispose();
            }
        });

        btnAgregarTalla.setBackground(new java.awt.Color(0, 0, 0));
        btnAgregarTalla.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        btnAgregarTalla.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarTalla.setText("Agregar talla");
        btnAgregarTalla.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 0, true));
        btnAgregarTalla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregarTalla.setFocusPainted(false);
        btnAgregarTalla.setFocusable(false);
        btnAgregarTalla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarTallaActionPerformed(evt);
            }
        });
        add(btnAgregarTalla, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 590, 250, 48));
        btnAgregarTalla.setBorderPainted(false);
        btnAgregarTalla.setContentAreaFilled(false);
        btnAgregarTalla.setOpaque(false);
        btnAgregarTalla.setUI(new javax.swing.plaf.basic.BasicButtonUI() {
            @Override
            public void paint(Graphics g, JComponent c) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                // Pinta un fondo redondeado
                g2.setColor(c.getBackground());
                g2.fillRoundRect(0, 0, c.getWidth(), c.getHeight(), 20, 20);
                super.paint(g2, c);
                g2.dispose();
            }
        });

        jLTotal.setBackground(new java.awt.Color(255, 255, 255));
        jLTotal.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLTotal.setForeground(new java.awt.Color(0, 0, 0));
        jLTotal.setText("Total:");
        add(jLTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 510, 50, 28));

        jFTotal.setEditable(false);
        jFTotal.setBackground(new java.awt.Color(255, 255, 255));
        jFTotal.setForeground(new java.awt.Color(0, 0, 0));
        jFTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("¤#,##0.00"))));
        jFTotal.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jFTotal.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        add(jFTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 540, 140, 40));

        jTallas.setBackground(new java.awt.Color(255, 255, 255));
        jTallas.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jTallas.setForeground(new java.awt.Color(0, 0, 0));
        jTallas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Talla", "Cantidad", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTallas.getTableHeader().setResizingAllowed(false);
        jTallas.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTallas);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 130, 350, 280));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        jFTotal.setText("0.00");
        modeloTablaProductos.setRowCount(0);
        modeloTablaTallas.setRowCount(0);
        ControlFlujo.mostrarSubmenuVentas();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void jTProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTProductosMouseClicked
        if(ventas != null && !ventas.isEmpty() && jTProductos.getSelectedRow() != -1){
            cargarTallas();
            jLTotal.setVisible(true);
            jFTotal.setVisible(true);
            btnQuitarProducto.setVisible(true);
        }
        else
            btnQuitarProducto.setVisible(false);
    }//GEN-LAST:event_jTProductosMouseClicked

    private void btnConfirmarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarVentaActionPerformed
        if(ventas != null && !ventas.isEmpty()){
            List<VentaDTO> ventasEliminar = new ArrayList<>();
            VentaDTO ventaActual = new VentaDTO();
            try {
                for(VentaDTO venta : ventas){
                    ventaActual = venta;
                    ControlOperaciones.registrarVenta(venta, venta.getTallasVendidas());
                    ventasEliminar.add(venta);
                }
                JOptionPane.showMessageDialog(this, "¡Compra registrada con éxito!", "Registro completado", JOptionPane.INFORMATION_MESSAGE);
                ventas.clear();
                jFTotal.setText("0.00");
                modeloTablaProductos.setRowCount(0);
                modeloTablaTallas.setRowCount(0);
                
            } catch (NegocioException e) {
                ventasEliminar.stream().forEach(venta -> ventas.remove(venta));
                String mensaje = String.format(
                        "No se registró correctamente la venta cuyo nombre del producto es %s y su color es %s. "
                                + "Causa: %s. Recomendamos retirar el producto de la lista.", 
                        ventaActual.getProductoVendido().getNombre(), ventaActual.getProductoVendido().getColor().getColor(), e.getMessage()
                );
                JOptionPane.showMessageDialog(this, mensaje, "Error en el registro de una venta", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnConfirmarVentaActionPerformed

    private void btnQuitarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarProductoActionPerformed
        if(ventas != null && !ventas.isEmpty() && jTProductos.getSelectedRow() != -1){
            ventas.remove(jTProductos.getSelectedRow());
            cargarVentas();
        }
    }//GEN-LAST:event_btnQuitarProductoActionPerformed

    private void btnAgregarTallaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarTallaActionPerformed
        ControlFlujo.mostrarAgregarProducto();
    }//GEN-LAST:event_btnAgregarTallaActionPerformed
    
    public void agregarVenta(VentaDTO venta){
        if(venta != null){
            boolean productoEncontrado = false;
            if(ventas == null)
                ventas = new ArrayList<>();
            
            else if(!ventas.isEmpty()){
                for(VentaDTO ventaDTO : ventas){
                    if(ventaDTO.getProductoVendido().getId() == venta.getProductoVendido().getId()){
                        JOptionPane.showMessageDialog(
                                this, 
                                "El producto asociado a la nueva venta ya se encuentra agregado. Agregue un producto diferente o quite el producto de la lista.", 
                                "Producto ya agregado", 
                                JOptionPane.ERROR_MESSAGE
                        );
                        productoEncontrado = true;
                        break;
                    }
                }
            }
            if(!productoEncontrado){
                ventas.add(venta);
                cargarVentas();
            }
        }
    }
    
    private void cargarVentas(){
        modeloTablaProductos.setRowCount(0);
        modeloTablaTallas.setRowCount(0);
        Double total = 0.0;
        for(VentaDTO venta : ventas){
            total += venta.getTotalVenta();
            ProductoDTO productoVendido = venta.getProductoVendido();
            modeloTablaProductos.addRow(new Object[]{
                productoVendido.getNombre(),
                productoVendido.getTipo().getTipo(),
                productoVendido.getCategoria().getCategoria(),
                productoVendido.getColor().getColor(),
                productoVendido.getPrecio(),
                venta.getTotalVenta()
            });
        }
        jFTotal.setText(total.toString());
    }
    
    private void cargarTallas(){
        modeloTablaTallas.setRowCount(0);
        if(ventas != null && modeloTablaProductos.getRowCount() != -1){
            VentaDTO venta = ventas.get(jTProductos.getSelectedRow());
            venta.getTallasVendidas().stream().forEach(e -> {
                modeloTablaTallas.addRow(new Object[]{e.getTalla().getTalla(), e.getCantidadVendida(), e.getSubtotalVenta()});
            });
        }
        
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarTalla;
    private javax.swing.JButton btnConfirmarVenta;
    private javax.swing.JButton btnQuitarProducto;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JFormattedTextField jFTotal;
    private javax.swing.JLabel jLTotal;
    private javax.swing.JLabel jLTítuloNuevoProducto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTProductos;
    private javax.swing.JTable jTallas;
    // End of variables declaration//GEN-END:variables
}